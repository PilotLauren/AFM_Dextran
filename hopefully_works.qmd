---
title: "AFM Data"
author: "Lauren Puig"
format: pdf
editor: visual
---

```{r}
#| label: load-packages
#| message: false

library(tidyverse)
library(readr)
library(afmToolkit)
library(data.table)
#read_tsv() for tab separated
AFM_Data1 <- read_csv("AFM_Data1 - Sheet1.csv")
AFM_D1 <- AFM_Data1
```

# Starting with first Data

#assign row 5 as colnames

colnames(Data_1) \<- Data_1\[5,\]

remove row 1:5

Data_1 \<- Data_1\[c(-1:-5),\] View(Data_1)

```{r}
#| label: Graph-first

ggplot(AFM_Data1, aes(x = -retraction_nm, y = -force_r))+
  geom_line()
```

```{r}
#| label: change-data
AFM_D1 = transform(AFM_Data1,force_r = rev(force_r), retraction_nm = rev(retraction_nm))

setpointAFM1 <- AFM_D1 |>
  slice(1:150) |> 
  summarise(mean_force = (mean(force_r)))
setpointAFM1
AFM_D1
```

```{r}
#| label: subtract-mean

AFM_normal <- AFM_D1|>
  mutate(force_r = force_r - setpointAFM1$mean_force)|>
  mutate(force_f = force_f - setpointAFM1$mean_force)
AFM_normal

springconst <- AFM_normal |>
  filter(force_f > 4500 & force_f < 5000)|>
  filter(force_f == max(force_f) | force_f == min(force_f))|>
  summarize(slope = (force_f[1] - force_f [-1])/(extension_nm[1]-extension_nm[-1]))
springconst
```

```{r}
#| label: plot-to-see-diff

ggplot(AFM_normal)+
  scale_y_reverse()+
  scale_x_reverse()+
  geom_line(aes(x = retraction_nm, y = force_r), color = "orange")+
  geom_line(aes(x = extension_nm, y = force_f))
```

ok now just to see one selection

```{r}
#| label: filter-to-hump

dextran_AFM_total <- AFM_normal|>
  filter(force_r <= 500)|>
  filter(retraction_nm <4775 & retraction_nm > 4719.014)

dextran_first <- dextran_AFM_total|>
  filter(retraction_nm > 4730)

dextran_not <- dextran_AFM_total|>
  filter(retraction_nm < 4760 & retraction_nm >4730)

dextran_second <- dextran_AFM_total |>
  filter(!retraction_nm %in% dextran_not$retraction_nm)

dextran_AFM_entire <- AFM_normal|>
  filter(force_r == min(force_r))
dextran_AFM_entire


colss <- c("blue", "red")
exten <- c("extension", "retraction")

ggplot(dextran_AFM_total)+
  scale_y_reverse()+
  scale_x_reverse()+
  geom_line(aes(x = retraction_nm, y = force_r, color = "red"))+
  geom_line(aes(x = extension_nm, y = force_f, color = "blue"))+
  theme_bw()+
  scale_color_manual(name = "", labels = exten, values = colss)+
  labs(
    title = "Dextran force curve",
    x = "distance (nm)",
    y = "force (pN)",
    )#+
  #geom_smooth(aes(x = retraction_nm, y = force_r), se = FALSE, method = "gam", color = "black")

```

\

```{r}
#| label: cleaning-data-include-first-stretch

first_Dex <- AFM_normal|>
  filter()

```

```{r}
#| label: separating-data


forwardAFM <- AFM_D1 |>
  mutate(nm = extension_nm, force = force_f)|>
  select(nm, force)
forwardAFM

reverseAFM <- AFM_D1 |>
  mutate(nm = retraction_nm, force = force_r)|>
  select(nm, force)
reverseAFM

boundAFM <- rbind(forwardAFM, reverseAFM)
boundAFM
segment <- rep(c("approach", "retract"),times=c(5000,5000))
segment
```

Continuing 2/13 with AFM library - annoying

```{r}
#| AFM-toolkit-test

AFMtesttool <- boundAFM
n <- nrow(AFMtesttool)
z <- AFMtesttool$nm
force <- AFMtesttool$force

Time <- rep(1, n)
AFMcurve <- afmdata(data.frame(Z = z, Force = force, Segment = segment, Time = Time), params = list(SpringConstant = as.numeric(0.130146), curvename = "data1ret" ))
plot(AFMcurve)

```

An afmdata structure identical to the one in the input, but with an additional ForceCorrected column in the data dataframe of the afmdata structure.

```{r}
#| label: contact-point

data <- AFMcurve
width <- 20
mul1 <- 1
mul2 <- 5
contacted <- afmContactPoint(data, width = width, mul1 = mul1, mul2 = mul2, loessSmooth = FALSE)
plot(contacted) + geom_vline(xintercept = contacted$CP$CP, lty = 2)

AFMcurvebc <- contacted

```

```{r}
#| label: using-baseline-correction

app <- 0.7*4817.88 + 0.3*5154

AFMcurvecorr <- afmBaselineCorrection(AFMcurvebc)#, fitpause = "approach", ZPointApp = as.numeric(app), vsTime = FALSE)
plot(AFMcurvecorr)

```

```{r}
#| label: testing-to-see-difference

glimpse(AFMcurvebc)
glimpse(AFMcurvet)
```

```{r}
#| label: test-code-undefined

AFMcurvet <- afmReadJPK("force-save-JPK-3h.txt.gz", path = path.package("afmToolkit"))
AFMcurvet <- afmContactPoint(AFMcurvet,width = 10,mul1 = 1,mul2 = 20,
loessSmooth = FALSE)
AFMcurvet2 <- afmBaselineCorrection(AFMcurvet)
AFMcurvet2
plot(AFMcurvet2)
```

'

```{r}
#| label: dying

directory <-getwd()
directory
write.csv(dextran_first, "/home/guest/AFM_Dextran/dextran_first.csv", row.names=FALSE)
write.csv(dextran_second, "/home/guest/AFM_Dextran/dextran_second.csv", row.names=FALSE)
help = contacted$CP$CP
help
```
